#							-*- makefile-gmake -*-
ROOT=..
include $(ROOT)/Makefile.conf

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
OS_TYPE = @OCAML_OS_TYPE@

DOC_FILES = $(wildcard *.mli)
DOC_DIR = $(ROOT)/doc/html/

# Native code versions must be installed if and only if make opt was
# called previously (i.e. the files exist):
INSTALL_FILES = $(wildcard *.mli *.cmi *.cma *.cmx *.a *.cmxa)

ifneq "@OCAML_PKG_cairo2@" "no"
  PLUGINS += archimedes_cairo.ml
endif
ifneq "@OCAML_PKG_graphics@" "no"
  PLUGINS += archimedes_graphics.ml
endif

.PHONY: default all opt byte native
default: @OCAMLBEST@
all: byte
opt: native
byte: archimedes.cma $(PLUGINS:.ml=.cmo)
native: archimedes.cmxa $(PLUGINS:.ml=.cmxs)

ARCHIMEDES_FILES=color.ml backend.ml

archimedes.cma: archimedes.cmo
archimedes.cmxa: archimedes.cmx

archimedes.cmo: $(ARCHIMEDES_FILES:.ml=.cmo)
	$(OCAMLC) -o $@ $(OCAMLC_FLAGS) -pack $^

archimedes.cmx: $(ARCHIMEDES_FILES:.ml=.cmx)
	$(OCAMLOPT) -o $@ $(OCAMLOPT_FLAGS) -pack $^

$(ARCHIMEDES_FILES:.ml=.cmx): OCAMLOPT_FLAGS += -for-pack Archimedes

# Plugins
archimedes_graphics.cmo: archimedes_graphics.ml
	$(OCAMLFIND) ocamlc -c -o $@ $(OCAMLC_FLAGS) -package graphics $<
archimedes_graphics.cmxs: archimedes_graphics.ml
	$(OCAMLFIND) ocamlopt -shared -o $@ $(OCAMLOPT_FLAGS) \
	  -package graphics $<

archimedes_cairo.cmo: archimedes_cairo.ml
	$(OCAMLFIND) ocamlc -c -o $@ $(OCAMLC_FLAGS) -package cairo2 $<
archimedes_cairo.cmxs: archimedes_cairo.ml
	$(OCAMLFIND) ocamlopt -shared -o $@ $(OCAMLOPT_FLAGS) \
	  -package cairo2 $<

# Plugins
archimedes_graphics.cmo: archimedes_graphics.ml archimedes.cma
	$(OCAMLFIND) ocamlc -c -o $@ -package graphics $<
archimedes_graphics.cmxs: archimedes_graphics.ml archimedes.cmxa
	$(OCAMLFIND) ocamlopt -c -o $@ -package graphics $<

archimedes_cairo.cmo: archimedes_cairo.ml archimedes.cma
	$(OCAMLFIND) ocamlc -c -o $@ -package cairo2 $<
archimedes_cairo.cmxs: archimedes_cairo.ml archimedes.cmxa
	$(OCAMLFIND) ocamlopt -c -o $@ -package cairo2 $<


.PHONY: doc
OCAMLDOC_FLAGS += $(if $(OCAMLINCLUDES), $(addprefix -I , $(OCAMLINCLUDES)))
doc:
	if [ ! -d "$(DOC_DIR)" ]; then mkdir -p $(DOC_DIR); fi
	$(OCAMLDOC) -html -d $(DOC_DIR) $(OCAMLDOC_FLAGS) $(DOC_FILES)

.PHONY: install uninstall
# TODO: copy HTML doc
install: META $(INSTALL_FILES)
	ocamlfind install $(PACKAGE) $^

uninstall:
	ocamlfind remove $(PACKAGE)

include $(ROOT)/Makefile.ocaml

dist-clean::
	$(RM) META Makefile $(wildward *.dep)
