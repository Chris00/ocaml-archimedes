#							-*- makefile-gmake -*-
ROOT=..
include $(ROOT)/Makefile.conf

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
OS_TYPE = @OCAML_OS_TYPE@

DOC_FILES = archimedes.mli
DOC_DIR = $(ROOT)/doc/html/

# Native code versions must be installed if and only if make opt was
# called previously (i.e. the files exist):
INSTALL_FILES = $(addprefix archimedes, .mli .cmi .cma .cmx .a .cmxa)

ifneq "@OCAML_PKG_cairo2@" "no"
  PLUGINS += archimedes_cairo.ml
  INSTALL_FILES += archimedes_cairo.dep archimedes_cairo.cmo \
		$(wildcard archimedes_cairo.cmxs)
endif
ifneq "@OCAML_PKG_graphics@" "no"
  PLUGINS += archimedes_graphics.ml
  INSTALL_FILES += archimedes_graphics.dep archimedes_graphics.cmo \
	$(wildcard archimedes_graphics.cmxs) \
	archimedes_toploop.cma
  TOPLOOP = archimedes_toploop.cma
endif

PLUGINS += archimedes_tikz.ml
INSTALL_FILES += archimedes_tikz.cmo $(wildcard archimedes_tikz.cmxs)

.PHONY: default all opt byte native
default: @OCAMLBEST@
all: byte native
opt: native
byte: archimedes.cma $(PLUGINS:.ml=.cmo) $(TOPLOOP)
native: archimedes.cmxa $(PLUGINS:.ml=.cmxs)

ARCHIMEDES_FILES = conf.ml string_utils.ml color.ml matrix.ml backend.ml \
  coordinate.ml pointstyle.ml axes.ml functions.ml iterator.ml handle.ml \
  plot.ml

archimedes.cma: archimedes.cmo
archimedes.cmxa: archimedes.cmx
archimedes_toploop.cma: archimedes_toploop.cmo

archimedes.cmo: $(ARCHIMEDES_FILES:.ml=.cmo) archimedes.cmi
	$(OCAMLC) -o $@ $(OCAMLC_FLAGS) -pack $(filter-out archimedes.cmi,$^)

archimedes.cmx: $(ARCHIMEDES_FILES:.ml=.cmx) archimedes.cmi
	$(OCAMLOPT) -o $@ $(OCAMLOPT_FLAGS) -pack \
	$(filter-out archimedes.cmi,$^)

$(ARCHIMEDES_FILES:.ml=.cmx): OCAMLOPT_FLAGS += -for-pack Archimedes

archimedes.mli: $(wildcard *_public.mli) public_interface.ml
	@OCAML@ public_interface.ml > $@

# Plugins
archimedes_graphics.cmo: archimedes_graphics.ml
	$(OCAMLFIND) ocamlc -c -o $@ $(OCAMLC_FLAGS) -package graphics $<
archimedes_graphics.cmxs: archimedes_graphics.ml
	$(OCAMLFIND) ocamlopt -passopt -shared -o $@ $(OCAMLOPT_FLAGS) \
	  -package graphics $<

archimedes_cairo.cmo: archimedes_cairo.ml
	$(OCAMLFIND) ocamlc -c -o $@ $(OCAMLC_FLAGS) -package cairo2 $<
archimedes_cairo.cmxs: archimedes_cairo.ml
	$(OCAMLFIND) ocamlopt -passopt -shared -o $@ $(OCAMLOPT_FLAGS) \
	  -package cairo2 $<

archimedes_tikz.cmo: archimedes_tikz.ml
	$(OCAMLFIND) ocamlc -c -o $@ $(OCAMLC_FLAGS) $<
archimedes_tikz.cmxs: archimedes_tikz.ml
	$(OCAMLFIND) ocamlopt -passopt -shared -o $@ $(OCAMLOPT_FLAGS) $<


.PHONY: doc
OCAMLDOC_FLAGS += $(if $(OCAMLINCLUDES), $(addprefix -I , $(OCAMLINCLUDES)))
doc: $(DOC_FILES)
	if [ ! -d "$(DOC_DIR)" ]; then mkdir -p $(DOC_DIR); fi
	$(OCAMLDOC) -html -d $(DOC_DIR) $(OCAMLDOC_FLAGS) $(DOC_FILES)

.PHONY: install uninstall
# TODO: copy HTML doc
install: META $(INSTALL_FILES)
	ocamlfind install $(PACKAGE) $^

uninstall:
	ocamlfind remove $(PACKAGE)

include $(ROOT)/Makefile.ocaml

dist-clean::
	$(RM) META Makefile $(wildcard *.dep)
