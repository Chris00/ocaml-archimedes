#+STARTUP: showall

* Higher priority

The Y label does not work (graphics).  Should also remove the debugging.

UTF-8 font in Cairo.

For the following functions on [-2, 5], the automatic sampling does
not work:

  let f a x = a *. (tan x -. 1.) -. log x
  let df a x = a *. (1. +. (tan x)**2.) -. 1. /. x

Palettes should be offered (and being possible to create from
gradients with as many levels as we like) in the Color module.

[fx f a b] with a > b should revert the axis labels.  If there are
both reverted axis and "direct" ones, choose the direct ones.

Fix clipping in cairo that clips thick lines at the border of the data
graph. A thick line should be authorized to overlap out of the clip area.

Rename Viewport coord name `Device to `Viewport.

Auto tics placement should take a number of tics relative to the available
space, taking the text size into account.
For example, on Plot_stack test, we would want 0, 1, 2, 3, 4, ..., 8 tics
instead of 0, 2, 4, 6, 8.

Fully handle different left and right y axes.

Axes_ylog test hasn't got any labels on the x axis. It is not a bug, but
looks like, make it so that there's some.

Add support for multi-line labels and use it in Axes_dates test.

In Graphics backend, when drawing text, there's a rectangle of the size of
the text in the bottom left corner of the screen.

Tics.tics isn't useful for the user, hide it.

Use abstract types for Tics and create them with functions to be more
instinctive for users.
Consider the following example : the user wants to draw tics with non constant
step-size ; to plot dates where we have tics at each month, but the number of
days between each month is different.

Treat axes, labels, grid, fillings, specially. For example, axes should always be
drawn last and have their own color.
For that, consider attaching the style parameters to the plot via some handle ;
in the same way of "save", but give a function to recover the handle of the
last plotting instruction. Also consider adding the plot ranges in that handle
to be able to remove a plot instruction and reset the ranges to old one.
Implement layers or multi instructions queues (prefered to layers, less heavier).

Suppose rectangles x1, xend and xend, x1 are the same rectangles.

* Before 1.0

resizing

plot functions

implement missing functions in viewport.ml

transparency support

Can't catch a Cairo.Error.

Optimize behavior of empty marks.

function labels (tags)

draw axes when plotting a function with Plot.fx

Add clipping.

The Sizes module is not used anymore, in fact we consider that sizes are
absolute or relative to the dimensions of the viewport it belongs to. We don't
have any relativity of sizes from one viewport to another. Discuss if the
feature is really wanted.

Support for reversing the orientation of axes
(flipping the coordinates system won't do).

Arrows should be implemented in backends (since TikZ has its own implementation)

Add support for "auto-ratio" syncing (don't require to specify a fixed ratio to
share).

Consider merge Tics into Axes if it stays poor.

Change the record of matrix to a private record type and keep them mutable
(only by the functions of Matrix).

Add support for keys, functions titles and automatic maximization of the
viewport graph area to fit with those options.

Backends should provide normalized coordinates (to be used by Viewport and
higher level functions) and device coordinates (to be used by user for device
specific drawing). Then Viewport coordinate systems (`Data, `Graph, etc...)
should also support a custom coordinate system (that might be the device
coordinates of the backend).

Backend.text_extents should provide higher level extents taking rotation and
position. So that it make it possible to factorize the computation of text
extents.

Use the ideas at http://alaska-kamtchatka.blogspot.com/2011/10/first-principles-gif-encoder.html
to make a GIF output for the Graphics output (triggered by shortcut?).

* Far fetched

- advi => read TeX font metrics => correct text extents

Forbid the user to rotate the coordinate system (we never pay attention to
that). For that, export a (sub)module that only allows
translations/dilatations.

- http://code.google.com/p/flot/ use it to create an HTML backend?
  Example: https://github.com/bos/statistics/tree/master/examples/kde
